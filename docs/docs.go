// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/addfin": {
            "post": {
                "description": "Add a new finance record",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "finances"
                ],
                "summary": "Add finance",
                "parameters": [
                    {
                        "description": "Finance data to add",
                        "name": "finance",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/hendler.Finance"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/hendler.Finance"
                        }
                    }
                }
            }
        },
        "/all": {
            "get": {
                "description": "Get all finances",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "finances"
                ],
                "summary": "Get all finances",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/hendler.Finance"
                        }
                    }
                }
            }
        },
        "/finance/{id}": {
            "get": {
                "description": "Get finance by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "finances"
                ],
                "summary": "Get finance by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Finance ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/hendler.Finance"
                        }
                    }
                }
            }
        },
        "/removefin/{id}": {
            "delete": {
                "description": "Remove finance by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "finances"
                ],
                "summary": "Remove finance",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Finance ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/hendler.Finance"
                        }
                    }
                }
            }
        },
        "/updatefin/{id}": {
            "put": {
                "description": "Update finance by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "finances"
                ],
                "summary": "Update finance",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Finance ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Finance data to update",
                        "name": "finance",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/hendler.FinanceUpdateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/hendler.FinanceResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/hendler.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/hendler.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "hendler.ErrorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string",
                    "example": "Некорректные данные"
                }
            }
        },
        "hendler.Finance": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "sum": {
                    "type": "integer"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "hendler.FinanceResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "Данные успешно обновлены"
                }
            }
        },
        "hendler.FinanceUpdateRequest": {
            "type": "object",
            "properties": {
                "sum": {
                    "type": "integer",
                    "example": 200
                },
                "type": {
                    "type": "string",
                    "example": "expense"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "",
	BasePath:         "/api/v1",
	Schemes:          []string{},
	Title:            "Test Swagger API",
	Description:      "This is a sample server.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
